ARG DLD_BASE
FROM $DLD_BASE

ARG DLD_USER=master
ENV DLD_USER $DLD_USER
ENV TF_ENABLE_AUTO_MIXED_PRECISION 1

RUN APT_INSTALL="apt-get install -y --no-install-recommends" && \
    PIP_INSTALL="python -m pip --no-cache-dir install --upgrade" && \
    GIT_CLONE="git clone --depth 10" && \
    apt-get update && \

# ==================================================================
# python
# ------------------------------------------------------------------

    $PIP_INSTALL \
        tqdm \
        click \
        scikit-image \
        jupyter \
        jupyterlab \
        h5py \
        git+https://github.com/aleju/imgaug.git \
        && \

# ==================================================================
# tensorflow
# ------------------------------------------------------------------

    $PIP_INSTALL \
        -U six numpy wheel setuptools mock 'future>=0.17.1' \
        && \
    $PIP_INSTALL \
        -U keras_applications keras_preprocessing --no-deps \
        && \

    $APT_INSTALL unzip && \

    BAZEL_VERSION="0.27.1" && \
    wget https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/bazel-${BAZEL_VERSION}-installer-linux-x86_64.sh && \
    chmod +x bazel-${BAZEL_VERSION}-installer-linux-x86_64.sh && \
    ./bazel-${BAZEL_VERSION}-installer-linux-x86_64.sh && \

    git clone https://github.com/tensorflow/tensorflow.git && \
    cd tensorflow && \
    git checkout v2.1.0 && \
    TF_NEED_CUDA=1 ./configure && \
    bazel build --config=opt --config=cuda //tensorflow/tools/pip_package:build_pip_package && \
    ./bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/tensorflow_pkg && \
    $PIP_INSTALL /tmp/tensorflow_pkg/tensorflow-*.whl && \
    cd - && rm -rf /tmp/tensorflow_pkg /root/.cache tensorflow && \

    $PIP_INSTALL \
        tensorflow-datasets \
        git+https://github.com/qubvel/classification_models.git \
        git+https://github.com/qubvel/segmentation_models \
        git+https://github.com/aleju/imgaug.git \
        && \

# ==================================================================
# jupyterlab extensions
# ------------------------------------------------------------------

    jupyter labextension install @jupyterlab/toc && \
    jupyter labextension install @krassowski/jupyterlab_go_to_definition && \

# ==================================================================
# sshd
# ------------------------------------------------------------------

    DEBIAN_FRONTEND=noninteractive $APT_INSTALL \
        openssh-server sudo \
        && \
    mkdir \
        /var/run/sshd \
        && \
    sed 's@session\s*required\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd \
        && \
    echo "export VISIBLE=now" >> /etc/profile \
        && \
    echo "$DLD_USER ALL=(root) NOPASSWD:ALL" > /etc/sudoers.d/$DLD_USER \
        && \
    chmod 0440 /etc/sudoers.d/$DLD_USER

ENV NOTVISIBLE "in users profile"

EXPOSE 22

# ==================================================================
# config & cleanup
# ------------------------------------------------------------------

ENV LD_LIBRARY_PATH="/usr/local/cuda/extras/CUPTI/lib64:${LD_LIBRARY_PATH}"

RUN \
    ldconfig && \
    apt-get clean && \
    apt-get autoremove && \
    rm -rf /var/lib/apt/lists/* /tmp/*

# 8888 - Jupyterlab
# 6006 - TensorBoard
EXPOSE 8888 6006

# ==================================================================
# user
# ------------------------------------------------------------------

ENV HOME=/home/$DLD_USER
WORKDIR $HOME
VOLUME /home/$DLD_USER

COPY entrypoint.sh /usr/local/bin/entrypoint.sh
RUN chmod +x /usr/local/bin/entrypoint.sh
ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]
